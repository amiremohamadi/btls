WHITESPACE = _{ (" " | "\t" | "\r" | "\n")+ }
COMMENT    = _{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE? }
NEWLINE    = _{ "\r\n" | "\n" }

identifier = @{ (ASCII_ALPHANUMERIC | "_")+ }
string     = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
number     = @{ ASCII_DIGIT+ }

primary   =  {
    string
  | number
  | call
  | identifier
  | var_expr
}
variable  =  { ("$" | "@") ~ identifier }
var_expr  =  { (inc ~ dec)* ~ variable ~ (inc | dec)* }
expr      =  { prefix* ~ primary ~ (infix ~ (prefix* ~ primary))* }
expr_list =  { (expr ~ ("," ~ expr)*)? }
infix     = _{ add | sub | mul | div | le | lt | ge | gt | eq | ne | and | or }
prefix    = _{ not | neg | pos }
inc       =  { "++" }
dec       =  { "--" }
add       =  { "+" }
sub       =  { "-" }
mul       =  { "*" }
div       =  { "/" }
le        =  { "<=" }
lt        =  { "<" }
ge        =  { ">=" }
gt        =  { ">" }
eq        =  { "==" }
ne        =  { "!=" }
and       =  { "&&" }
or        =  { "||" }
not       =  { "!" }
// FIXME: parser misinterprets "add"/"sub" as prefix
// using "neg"/"pos" as a temporary workaround
neg       =  { "-" }
pos       =  { "+" }

assign_op  =  { "=" | "+=" | "-=" }
assignment =  { variable ~ assign_op ~ expr }
call       =  { identifier ~ "(" ~ expr_list ~ ")" }
if         =  { "if" ~ "(" ~ expr ~ ")" ~ block }
while      =  { "while" ~ "(" ~ expr ~ ")" ~ block }
for        =  { "for" ~ "(" ~ expr ~ ":" ~ expr ~ ")" ~ block }
base_stmt  = _{ assignment | expr }
statement  =  { base_stmt ~ ";" | if | while | for }
block      =  { "{" ~ (COMMENT | statement | error)* ~ "}" }

attach_point      = { (identifier | ":" | "*")+ }
attach_point_list = { attach_point ~ ("," ~ attach_point)* }
probe_condition   = { "/" ~ expr ~ "/" }
probe             = { attach_point_list ~ probe_condition? ~ block }
preamble          = { probe }

error        =  { rest_of_line }
rest_of_line = @{ (!(NEWLINE | "}") ~ ANY)+ ~ NEWLINE? }

unmatched_brace = { "}" }
program         = { SOI ~ (COMMENT | preamble | error | unmatched_brace)* ~ EOI }
